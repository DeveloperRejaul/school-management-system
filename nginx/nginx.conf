# --------------------------------------------
# nginx.conf
# --------------------------------------------
worker_processes  1;


# maximum number of simultaneous connections per worker process
events {
    worker_connections  1024;
}


http {
    include mime.types; 

    # next.js web service
    upstream web_service {
        server web:3001;
    }   
    #nest.js server service
    upstream api_backend {
         server app:8000; 
    }  

    # ==========================================================
    # HTTPS for localhost (self-signed certs)
    # - Next.js at /
    # - API at /api/ (prefix stripped)
    # ==========================================================
    server {
        # HTTP server listening on port 443
        listen 443 ssl;

        # SSL certificate and key files
        ssl_certificate     /etc/nginx/ssl/nginx-selfsigned.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;


        # server name can be your domain name or IP address
        server_name localhost;


        location /api {
            # Strip /api prefix:
            #   /api/health  -> /
            #   /api/v1/foo  -> /v1/foo
            # rewrite ^/api/?(.*)$ /$1 break;

            proxy_http_version 1.1;
            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket friendly (safe to keep always)
            # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection "upgrade";

            proxy_pass http://api_backend/;
            proxy_redirect off;
        }

        # ---- Everything else -> Next.js ----
        location / {
            proxy_http_version 1.1;
            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket friendly (for Next.js dev / HMR, etc.)
            # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection "upgrade";

            proxy_pass http://web_service;
            proxy_redirect off;
        }
    }


  # ==========================================================
  # HTTP -> HTTPS redirect (all hosts)
  # ==========================================================
  server {
    listen 80;
    server_name _;
    return 301 https://$host$request_uri;
  }
}
